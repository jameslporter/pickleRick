// This file has been auto-generated by Warthog.  Do not update directly as it
// will be re-written.  If you need to change this file, update models or add
// new TypeGraphQL objects
// prettier-ignore
// @ts-ignore
import { DateResolver as Date } from 'graphql-scalars';
// prettier-ignore
// @ts-ignore
import { GraphQLID as ID } from 'graphql';
// prettier-ignore
// @ts-ignore
import { ArgsType, Field as TypeGraphQLField, Float, InputType as TypeGraphQLInputType, Int } from 'type-graphql';
// prettier-ignore
// @ts-ignore
import { registerEnumType, GraphQLISODateTime as DateTime } from "type-graphql";

// prettier-ignore
// @ts-ignore eslint-disable-next-line @typescript-eslint/no-var-requires
const { GraphQLJSONObject } = require('graphql-type-json');
// prettier-ignore
// @ts-ignore
import { BaseWhereInput, JsonObject, PaginationArgs, DateOnlyString, DateTimeString } from 'warthog';

// @ts-ignore
import { Notes } from "../src/modules/notes/notes.model";

export enum NotesOrderByEnum {
  createdAt_ASC = "createdAt_ASC",
  createdAt_DESC = "createdAt_DESC",

  updatedAt_ASC = "updatedAt_ASC",
  updatedAt_DESC = "updatedAt_DESC",

  deletedAt_ASC = "deletedAt_ASC",
  deletedAt_DESC = "deletedAt_DESC",

  characterID_ASC = "characterID_ASC",
  characterID_DESC = "characterID_DESC",

  contents_ASC = "contents_ASC",
  contents_DESC = "contents_DESC"
}

registerEnumType(NotesOrderByEnum, {
  name: "NotesOrderByInput"
});

@TypeGraphQLInputType()
export class NotesWhereInput {
  @TypeGraphQLField(() => ID, { nullable: true })
  id_eq?: string;

  @TypeGraphQLField(() => [ID], { nullable: true })
  id_in?: string[];

  @TypeGraphQLField(() => DateTime, { nullable: true })
  createdAt_eq?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  createdAt_lt?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  createdAt_lte?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  createdAt_gt?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  createdAt_gte?: Date;

  @TypeGraphQLField(() => ID, { nullable: true })
  createdById_eq?: string;

  @TypeGraphQLField(() => [ID], { nullable: true })
  createdById_in?: string[];

  @TypeGraphQLField(() => DateTime, { nullable: true })
  updatedAt_eq?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  updatedAt_lt?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  updatedAt_lte?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  updatedAt_gt?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  updatedAt_gte?: Date;

  @TypeGraphQLField(() => ID, { nullable: true })
  updatedById_eq?: string;

  @TypeGraphQLField(() => [ID], { nullable: true })
  updatedById_in?: string[];

  @TypeGraphQLField({ nullable: true })
  deletedAt_all?: Boolean;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  deletedAt_eq?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  deletedAt_lt?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  deletedAt_lte?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  deletedAt_gt?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  deletedAt_gte?: Date;

  @TypeGraphQLField(() => ID, { nullable: true })
  deletedById_eq?: string;

  @TypeGraphQLField(() => [ID], { nullable: true })
  deletedById_in?: string[];

  @TypeGraphQLField(() => Int, { nullable: true })
  characterID_eq?: number;

  @TypeGraphQLField(() => Int, { nullable: true })
  characterID_gt?: number;

  @TypeGraphQLField(() => Int, { nullable: true })
  characterID_gte?: number;

  @TypeGraphQLField(() => Int, { nullable: true })
  characterID_lt?: number;

  @TypeGraphQLField(() => Int, { nullable: true })
  characterID_lte?: number;

  @TypeGraphQLField(() => [Int], { nullable: true })
  characterID_in?: number[];

  @TypeGraphQLField({ nullable: true })
  contents_eq?: string;

  @TypeGraphQLField({ nullable: true })
  contents_contains?: string;

  @TypeGraphQLField({ nullable: true })
  contents_startsWith?: string;

  @TypeGraphQLField({ nullable: true })
  contents_endsWith?: string;

  @TypeGraphQLField(() => [String], { nullable: true })
  contents_in?: string[];
}

@TypeGraphQLInputType()
export class NotesWhereUniqueInput {
  @TypeGraphQLField(() => ID)
  id?: string;
}

@TypeGraphQLInputType()
export class NotesCreateInput {
  @TypeGraphQLField()
  characterID!: number;

  @TypeGraphQLField({ nullable: true })
  contents?: string;
}

@TypeGraphQLInputType()
export class NotesUpdateInput {
  @TypeGraphQLField({ nullable: true })
  characterID?: number;

  @TypeGraphQLField({ nullable: true })
  contents?: string;
}

@ArgsType()
export class NotesWhereArgs extends PaginationArgs {
  @TypeGraphQLField(() => NotesWhereInput, { nullable: true })
  where?: NotesWhereInput;

  @TypeGraphQLField(() => NotesOrderByEnum, { nullable: true })
  orderBy?: NotesOrderByEnum;
}

@ArgsType()
export class NotesCreateManyArgs {
  @TypeGraphQLField(() => [NotesCreateInput])
  data!: NotesCreateInput[];
}

@ArgsType()
export class NotesUpdateArgs {
  @TypeGraphQLField() data!: NotesUpdateInput;
  @TypeGraphQLField() where!: NotesWhereUniqueInput;
}
